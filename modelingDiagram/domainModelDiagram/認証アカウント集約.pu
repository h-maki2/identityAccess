@startuml 認証情報関連

title 認証アカウント集約

package "認証アカウント集約(Aggregation)" {
    class "AuthenticationAccount\n認証アカウント" as AuthenticationAccount << (R,red) RootEntity >> {
        userId: UserId
        email: Email
        password: Password
        verificationStatus 確認済みステータス: VerificationStatus
        loginRestriction ログイン制限: LoginRestriction
        unsubscribeStatus: 退会済みステータス: UnsubscribeStatus
    }

    class UserId {
        - value: string
    }

    class UserEmail {
        - value: string
    }

    class UserPassword {
        - value: string
    }

    class "VerificationStatus\n確認済みステータス" as VerificationStatus {
        + value: Enum { verified(確認済み), unverified(未確認)}
    }

    class "LoginRestriction\nログイン制限" as LoginRestriction {
        - failedLoginCount ログイン失敗回数: FailedLoginCount
        - loginRestrictionStatus ログイン制限ステータス: LoginRestrictionStatus
        - nextLoginAllowedAt 次回ログイン可能日時: NextLoginAllowedAt
    }

    class "LoginRestrictionStatus\nログイン制限ステータス" as LoginRestrictionStatus {
        + value: Enum { restricted(制限中), unrestricted(制限なし)}
    }

    class "FailedLoginCount\nログイン失敗回数" as FailedLoginCount {
        - value: int
    }

    class "NextLoginAllowedAt\n次回ログイン可能日時" as NextLoginAllowedAt {
        - value: DatetimeImutable
    }

    class "UnsubscribeStatus\n退会済みステータス" as UnsubscribeStatus {
        + value: Enum { Unsubscribe(退会済み), NotUnsubscribe(未退会)}
    }

    note bottom of AuthenticationAccount
        ・「認証済みの有無」が「認証済み」の場合のみ、ログインが行える
        ・退会の場合、ユーザーIDと退会済みステータス以外のデータが削除される
    end note

    note bottom of UserId
        userIdはULIDやUUIDv7などの時系列ソート可能なIDを用いる
    end note

    note bottom of VerificationStatus
        本登録確認メールでの確認が済んだら「確認済み」になる 
    end note

    note bottom of Password
        ・ステータスが「認証済み」の場合のみパスワードの変更が行える
        ・ログイン制限中はパスワードの変更が行えない
        ・nextTask: パスワードを変更したときにメールを送信する
    end note

    note bottom of Email
        ・重複したメールアドレスは存在しない
        ・255文字以内
    end note

    note bottom of FailedLoginCount
        ・0以上10以下の整数
        ・ログインに失敗した回数が10回を超えると、ログイン制限がかかる
    end note

    note bottom of NextLoginAllowedAt
        ・ログイン制限がかかった場合、次回ログイン可能日時が設定される
        ・ログイン制限が解除された場合、次回ログイン可能日時はnullになる
        ・ログイン制限は10分間
    end note

    note bottom of LoginRestrictionStatus
        ・ログイン制限がかかった場合、ログイン制限ステータスが「制限中」になる
        ・ログイン制限が解除された場合、ログイン制限ステータスが「制限なし」になる
    end note

    end bottom of UnsubscribeStatus
        ・ログイン制限中は退会済みに更新できない
        ・確認ステータスが未確認の場合は、退会済みに更新できない
    end note

    AuthenticationAccount *-down- UserId
    AuthenticationAccount *-down- UserName
    AuthenticationAccount *-down- UserEmail
    AuthenticationAccount *-down- UserPassword
    AuthenticationAccount *-down- VerificationStatus
}

package "認証確認(AuthenticationConfirmation)" {
    class "AuthenticationConfirmation\n認証確認" as AuthenticationConfirmation {
        userId: UserId
        OneTimeToken: OneTimeToken
        authenticationCode: AuthenticationCode
    }

    class "AuthenticationCode\n認証コード" as AuthenticationCode {
        - value: string
    }

    class "OneTimeToken\n一時トークン" as OneTimeToken {
        - value: string
        - OneTimeTokenExpiration: OneTimeTokenExpiration
    }

    class "OneTimeTokenExpiration\n一時トークンの有効期限" as OneTimeTokenExpiration {
        - value: DatetimeImutable
    }

    note bottom of AuthenticationCode
        ・ランダムな6文字の数字
    end note

    note bottom of OneTimeToken
        ・認証確認URLのクエリパラメータに追加される
        ・認証確認が済んだら削除する
        ・有効期限は24時間
        ・有効期限が切れた場合は、再度新しい一時トークンを発行する
        ・ランダムな24文字の文字列
    end note

    AuthenticationConfirmation *-down- OneTimeToken
    AuthenticationConfirmation -down-> AuthenticationAccount.UserId
}

@enduml